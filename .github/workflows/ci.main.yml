name: MAIN's CI/CD

on:
  push:
    branches:
      - main

env:
  ENCACAP_BUILD_ARTIFACT_NAME: template-reactjs-vite-swc-ts
  ENCACAP_BUILD_ARTIFACT_PATH: ./dist

jobs:
  bun-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - name: Restore node_modules cache
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      - run: bun install
      - name: Save node_modules cache
        uses: actions/cache/save@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/package.json') }}

  bun-build:
    runs-on: ubuntu-latest
    environment: release-main
    env:
      VITE_APP_NAME: ${{ vars.VITE_APP_NAME }}
      VITE_APP_API_BASE_URL: ${{ vars.VITE_APP_API_BASE_URL }}
      APP_CROWDIN_PROJECT_ID: ${{ secrets.APP_CROWDIN_PROJECT_ID }}
      APP_CROWDIN_API_TOKEN: ${{ secrets.APP_CROWDIN_API_TOKEN }}
    needs: bun-install
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - name: Restore node_modules cache
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      - run: bun run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ENCACAP_BUILD_ARTIFACT_NAME }}
          path: ${{ env.ENCACAP_BUILD_ARTIFACT_PATH }}

  deploy-server:
    runs-on: ubuntu-latest
    environment: release-main
    needs: bun-build
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ENCACAP_BUILD_ARTIFACT_NAME }}
          path: ${{ env.ENCACAP_BUILD_ARTIFACT_PATH }}
      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          source: "${{ env.ENCACAP_BUILD_ARTIFACT_PATH }}/*"
          target: ${{ secrets.SERVER_TARGET }}
          strip_components: 1
          rm: true
          port: ${{ secrets.SERVER_PORT }}
